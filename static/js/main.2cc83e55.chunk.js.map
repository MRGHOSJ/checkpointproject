{"version":3,"sources":["config.js","ppl/ppl.js","ppl/pplform.js","ppl/ppldata.js","App.js","serviceWorker.js","index.js"],"names":["DB_C","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","stylingdiv","width","border","padding","Ppl","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","url","age","other","personID","handledeletebt","bind","assertThisInitialized","id","deletebt","_this2","react_default","a","createElement","style","className","onClick","src","Component","Pplform","state","display","displayobt","displaycbc","handleUserage","handleUsername","handleUserother","handleUserurl","submited","openb","closebc","e","setState","target","value","addperson","myForm","openbt","type","maxlength","onChange","placeholder","Ppldata","dd","firebase","initializeApp","db","database","ref","child","pplls","previusPerson","on","snap","push","key","val","i","length","splice","alert","set","console","log","_this3","es","map","ppls","size","ppl","ppl_pplform","App","ppldata","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2cc83e55.chunk.js","sourcesContent":["// Initialize Firebase\r\nexport const DB_C = {\r\n    apiKey: \"AIzaSyCeJKEg5vxpBTJuId8GAFeXynfeBkUSZcE\",\r\n    authDomain: \"myprojectcheckpoint.firebaseapp.com\",\r\n    databaseURL: \"https://myprojectcheckpoint.firebaseio.com\",\r\n    projectId: \"myprojectcheckpoint\",\r\n    storageBucket: \"myprojectcheckpoint.appspot.com\",\r\n    messagingSenderId: \"661605869137\",\r\n    appId: \"1:661605869137:web:3bfe4c0735a05779\"\r\n  };","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\n  const stylingdiv = {\r\n    \"width\": \"350px\",\r\n    \"border\": \"2px solid Black\",\r\n    \"padding\":\"20px\",\r\n  }\r\n\r\nclass Ppl extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.name = props.name;\r\n    this.url = props.url;\r\n    this.age = props.age;\r\n    this.other = props.other;\r\n    this.personID = props.personID;\r\n    this.handledeletebt = this.handledeletebt.bind(this);\r\n  }\r\n\r\n  handledeletebt(id){\r\n    this.props.deletebt(id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={stylingdiv}>\r\n        <button className=\"close\" onClick={() => this.handledeletebt(this.props)}>x</button>\r\n          <center>\r\n            \r\n            <img src={this.url} className=\"pic\"/>\r\n            \r\n            <h2 className=\"name\">Name:{this.name}</h2>\r\n            <br/>\r\n            \r\n            <h4>Age:{this.age}</h4>\r\n            <br/>\r\n            <hr/>\r\n            \r\n            <h4 className=\"other\">Other:</h4>\r\n            <p>{this.other}</p>\r\n            <br/>\r\n            <hr/>\r\n\r\n          </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ppl;","import React, { Component } from 'react';\r\nimport './pplform.css'\r\n\r\nclass Pplform extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            url:\"\",\r\n            other:\"\",\r\n            name:\"\",\r\n            age:'',\r\n            display:\"none\",\r\n            displayobt:\"block\",\r\n            displaycbc:\"block\",\r\n        }\r\n        \r\n        this.handleUserage = this.handleUserage.bind(this);\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handleUserother = this.handleUserother.bind(this);\r\n        this.handleUserurl = this.handleUserurl.bind(this);\r\n        this.submited = this.submited.bind(this);\r\n        this.openb = this.openb.bind(this);\r\n        this.closebc = this.closebc.bind(this);\r\n    }\r\n    \r\n    handleUserage(e){\r\n        this.setState({\r\n            age: e.target.value\r\n        })\r\n    }\r\n\r\n    handleUserurl(e){\r\n        this.setState({\r\n            url: e.target.value\r\n        })\r\n    }\r\n\r\n    handleUserother(e){\r\n        this.setState({\r\n            other: e.target.value\r\n        })\r\n    }\r\n\r\n    handleUsername(e){\r\n        this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    submited(){\r\n        this.props.addperson(this.state.name, this.state.age, this.state.url, this.state.other);\r\n        this.setState({\r\n            url:\"\",\r\n            other:\"\",\r\n            name:\"\",\r\n            age:'',\r\n        })\r\n    }\r\n\r\n    openb(){\r\n        this.setState({\r\n            display:'block',\r\n            displayobt:'none',\r\n            displaycbc:\"block\"\r\n        })\r\n    }\r\n\r\n    closebc(){\r\n        this.setState({\r\n            display:'none',\r\n            displayobt:'block',\r\n            displaycbc:\"none\"\r\n        })\r\n    }\r\n\r\n  render() {\r\n\r\n    const myForm ={ \"display\": this.state.display}\r\n    const openbt = {\"display\":this.state.displayobt}\r\n    const closebc = {\"display\":this.state.displaycbc}\r\n\r\n        return (\r\n        <div>\r\n            <button className=\"open-button\" onClick={this.openb} style={openbt}>+</button>\r\n                <center>\r\n                        <div className=\"form-popup\" style={myForm}>\r\n                            <div className=\"form-container\">\r\n                                <h2>Name:</h2>\r\n\r\n                                <input \r\n                                type=\"text\" \r\n                                maxlength=\"10\" \r\n                                onChange={this.handleUsername} \r\n                                value={this.state.name}  \r\n                                placeholder=\"name goes here\" \r\n                                />\r\n                                \r\n                                <h2>Icon Url:</h2>\r\n\r\n                                <input \r\n                                type=\"text\"  \r\n                                onChange={this.handleUserurl} \r\n                                value={this.state.url}  \r\n                                placeholder=\"image url\" \r\n                                />\r\n                                \r\n                                <h2>Age:</h2>\r\n\r\n                                <input \r\n                                type=\"number\"   \r\n                                onChange={this.handleUserage} \r\n                                value={this.state.age} \r\n                                placeholder=\"age goes here\" \r\n                                />\r\n                                \r\n                                <h2>Other:</h2>\r\n\r\n                                <input \r\n                                type=\"text\"  \r\n                                onChange={this.handleUserother} \r\n                                value={this.state.other} \r\n                                placeholder=\"Other things you want to inform about\" \r\n                                />\r\n                                \r\n                                <button onClick={this.submited} className=\"btn\">Add</button>\r\n                                <button type=\"button\" className=\"btn cancel\" onClick={this.closebc} style={closebc}>Close</button>\r\n                            </div>\r\n                        </div>\r\n                </center>\r\n        </div>\r\n            \r\n            )\r\n         }\r\n}\r\n\r\nexport default Pplform;\r\n","import React, {Component} from 'react';\r\nimport firebase from 'firebase';\r\nimport {DB_C} from '../config.js';\r\nimport Ppl from './ppl.js';\r\nimport Pplform from './pplform'\r\nimport { Grid, Cell } from 'react-md';\r\n\r\nclass Ppldata extends Component{\r\n    constructor(){\r\n        super()\r\n\r\n            this.dd = firebase.initializeApp(DB_C);\r\n            this.db = this.dd.database().ref().child('pplls');\r\n            this.addperson = this.addperson.bind(this);\r\n            \r\n                this.state ={\r\n                    pplls: []\r\n                }\r\n    }\r\n    \r\n        componentWillMount(){\r\n            const previusPerson = this.state.pplls\r\n\r\n            this.db.on('child_added', snap => {\r\n                previusPerson.push({\r\n                    id: snap.key,\r\n                    name: snap.val().name,\r\n                    age: snap.val().age,\r\n                    url: snap.val().url,\r\n                    other: snap.val().other,\r\n                })\r\n                    this.setState({\r\n                        pplls: previusPerson\r\n                    })\r\n            })\r\n            this.db.on('child_removed', snap => {\r\n                for(var i=0; i< previusPerson.length; i++){\r\n                    if(previusPerson[i].id === snap.key){\r\n                        previusPerson.splice(i,1)\r\n                    }\r\n                }\r\n                this.setState({\r\n                    pplls: previusPerson\r\n                })\r\n            })\r\n        }\r\n\r\n        addperson(name, age, url, other){\r\n            if(name === \"\" || age === \"\" || url === \"\" || other === \"\" ){\r\n                alert('err');\r\n            }else{\r\n                this.db.push().set({ name: name,age:age,url:url,other:other})\r\n            }\r\n        }\r\n\r\n        deletebt(id){\r\n            console.log(id)\r\n        }\r\n\r\n    render() {\r\n        return (\r\n           <div>\r\n               <div>\r\n                    <Grid>\r\n                        {\r\n                            this.state.pplls.map((ppls) =>{\r\n                                return(\r\n                                        <Cell size={4}>\r\n                                            <Ppl \r\n                                                name={ppls.name} \r\n                                                age={ppls.age} \r\n                                                url={ppls.url} \r\n                                                other={ppls.other} \r\n                                                key={ppls.id} \r\n                                                deletebt={this.deletebt}\r\n                                            />\r\n                                        </Cell>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Grid>\r\n               </div>\r\n               <Pplform addperson={this.addperson}/>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Ppldata;\r\n","import React, { Component } from 'react';\nimport Ppldata from './ppl/ppldata';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <center>\n          <h1>Every Body That Added Himself Here</h1>\n          <Ppldata/>\n        </center>\n      </div>\n        \n        )\n         }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}